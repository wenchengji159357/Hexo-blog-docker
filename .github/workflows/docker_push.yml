name: Docker
on:
  push:
    # 每次 push tag 时进行构建，不需要每次 push 都构建。使用通配符匹配每次 tag 的提交，记得 tag 名一定要以 v 开头
    # tags:
    #  - v*
env:
  # 设置 docker 镜像名
  Image_Name: hexo-blog-image
  Docker_User: jiwencheng
jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        # 构建镜像，指定镜像名
      - name: Build image
        run: docker build . --file Dockerfile --build-arg Github_User="wenchengji159357" Github_Email="wenchengji159357@gmail.com" --tag ${Image_Name}
        # 登录到 dockerhub，使用 GitHub secrets 传入账号密码，密码被加密存储在 GitHub 服务器，添加方法见下图。
      - name: Log into registry
        run: echo "${{ secrets.Docker_Access_Token }}" | docker login -u ${Docker_User} --password-stdin

      - name: Push image
        run: |
          # 拼接镜像 id，这个镜像 id 就是在使用 docker 镜像时 pull 后面的名字。
          Image_Id=${Docker_User}/${Image_Name}

          # 将所有的大写字母转为小写
          Image_Id=$(echo $Image_Id | tr '[A-Z]' '[a-z]')

          # 从 GitHub.ref 中取出版本
          Version=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # 从 tag 名字中替换 v 字符
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && Version=$(echo $Version | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$Version" == "master" ] && Version=latest

          echo Image_Id=$Image_Id
          echo Version=$Version
          # 设置镜像 id 和版本号
          docker tag $Image_Name $Image_Id:$Version
          # 进行 push
          docker push $Image_Id:$Version